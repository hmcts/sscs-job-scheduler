plugins {
  id 'java-library'
  id 'checkstyle'
  id 'pmd'
  id 'jacoco'
  id 'uk.gov.hmcts.java' version '0.12.2'
  id 'io.spring.dependency-management' version '1.0.10.RELEASE'
  id 'org.owasp.dependencycheck' version '6.0.3'
  id 'com.github.ben-manes.versions' version '0.36.0'
  id 'org.sonarqube' version '3.0'
  id 'maven'
  id 'maven-publish'
  id 'com.jfrog.bintray' version '1.8.5'
}
def buildNumber = System.getenv("RELEASE_VERSION")?.replace("refs/tags/", "") ?: "DEV-SNAPSHOT"

group = 'uk.gov.hmcts.reform'
version = buildNumber

sourceCompatibility = 11
targetCompatibility = 11

def springBootVersion = '2.3.5.RELEASE'

def pomConfig = {
  licenses {
    license {
      name "MIT License"
      url "http://www.opensource.org/licenses/mit-license.php"
      distribution "repo"
    }
  }

  scm {
    url "https://github.com/hmcts/sscs-job-scheduler"
  }
}

sourceSets {

  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

compileJava {
  options.compilerArgs << "-Xlint:unchecked"
}

compileTestJava {
  options.compilerArgs << "-Xlint:unchecked"
}

compileIntegrationTestJava {
  options.compilerArgs << "-Xlint:unchecked"
}

task integration(type: Test) {
  description = "Runs Integration Tests"
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
}

checkstyle {
  toolVersion = '8.4'
  // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
  configDir = new File(rootDir, 'config/checkstyle')
}

pmd {
  toolVersion = "6.19.0"
  ignoreFailures = true
  sourceSets = [sourceSets.main, sourceSets.test, sourceSets.integrationTest]
  reportsDir = file("$project.buildDir/reports/pmd")
  ruleSetFiles = files("config/pmd/ruleset.xml")
}

project.tasks['sonarqube'].dependsOn test, integration
sonarqube {
  properties {
    property "sonar.projectName", "Reform :: SSCS job scheduler"
    property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
    property "sonar.jacoco.itReportPath", "${project.buildDir}/jacoco/integration.exec"
    property 'sonar.coverage.exclusions', "**/src/main/java/uk/gov/hmcts/reform/sscs/jobscheduler/config/**"
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  // Specifies if the build should be failed if a CVSS score above a specified level is identified.
  // range of 0-10 fails the build, anything greater and it doesn't fail the build
  failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
  suppressionFile = 'dependency-check-suppressions.xml'
}

repositories {
  mavenCentral()
  mavenLocal()
  maven {
    url "https://dl.bintray.com/hmcts/hmcts-maven"
  }
  jcenter()
  mavenCentral()

  maven {
    url 'https://repo.spring.io/libs-milestone'
  }

  // jitpack should be last resort
  // see: https://github.com/jitpack/jitpack.io/issues/1939
  maven { url 'https://jitpack.io' }
}

publishing {
  publications {
    Main(MavenPublication) {
      from components.java
      artifact sourcesJar
      artifact javadocJar
      groupId project.group
      artifactId 'sscs-job-scheduler'
      version project.version
    }
  }
}

bintray {
  user = System.getenv('BINTRAY_USER')
  key = System.getenv('BINTRAY_KEY')
  publications = ['Main']
  publish = true
  pkg {
    repo = 'hmcts-maven'
    name = 'sscs-job-scheduler'
    userOrg = 'hmcts'
    licenses = ['MIT']
    vcsUrl = 'https://github.com/hmcts/sscs-job-scheduler'
    version {
      name = project.version
    }
  }
}

def versions = [
  reformLogging   : '5.0.1',
  springBoot   : springBootVersion,
]

configurations.all {
  resolutionStrategy {
    eachDependency { DependencyResolveDetails details ->
      if (details.requested.group in ['com.fasterxml.jackson.core', 'com.fasterxml.jackson.module', 'com.fasterxml.jackson.datatype']) {
        details.useVersion '2.11.0'
      }
    }
  }
}

dependencyManagement {
  dependencies {

    // CVE-2019-0232, CVE-2019-0199 - command line injections on windows
    dependencySet(group: 'org.apache.tomcat.embed', version: '9.0.40') {
      entry 'tomcat-embed-core'
      entry 'tomcat-embed-el'
      entry 'tomcat-embed-websocket'
    }
  }
}

dependencies {
  compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.2'

  compile group: 'uk.gov.hmcts.reform', name: 'java-logging-spring', version: versions.reformLogging
  compile group: 'uk.gov.hmcts.reform', name: 'java-logging-httpcomponents', version: versions.reformLogging
  compile group: 'uk.gov.hmcts.reform', name: 'java-logging-appinsights', version: versions.reformLogging
  compile group: 'uk.gov.hmcts.reform', name: 'reform-api-standards', version: '0.3.0'

  compile group: 'javax.inject', name: 'javax.inject', version: '1'

  compile group: 'org.springframework.boot', name: 'spring-boot-starter', version: versions.springBoot
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: versions.springBoot
  compile group: 'org.springframework', name: 'spring-context-support', version: '5.2.12.RELEASE'

  compile group: 'org.springframework', name: 'spring-tx', version: '5.2.12.RELEASE'
  compile group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version:'0.1.0'

  testCompile group: 'junit', name: 'junit', version: 4.12
  testCompile group: 'org.assertj', name: 'assertj-core', version: '3.18.1'
  testCompile group: 'com.github.tomakehurst', name: 'wiremock-standalone', version: '2.27.2'
  testCompile group: 'org.json', name: 'json', version: '20201115'
  testCompile group: 'org.mockito', name: 'mockito-core', version: '3.6.28'
  testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.6.28'
  testCompile 'pl.pragmatists:JUnitParams:1.1.1'
  testCompile "org.junit.jupiter:junit-jupiter-api:5.7.0"
  testRuntime "org.junit.jupiter:junit-jupiter-engine:5.6.2"
  testImplementation "org.junit.jupiter:junit-jupiter-api:5.6.2"

  integrationTestCompile sourceSets.main.runtimeClasspath
}

jar {
  archiveName 'sscs-job-scheduler.jar'

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}
